#+BEGIN_SRC emacs-lisp
  ;; Using ‘C-h v’ (‘describe-variable’), look at the value of your
  ;; kill ring.  Add several items to your kill ring; look at its
  ;; value again.  Using ‘M-y’ (‘yank-pop)’, move all the way around
  ;; the kill ring.  How many items were in your kill ring?  Find the
  ;; value of ‘kill-ring-max’.  Was your kill ring full, or could you
  ;; have kept more blocks of text within it?
#+END_SRC

#+BEGIN_SRC emacs-lisp
  ;; Using ‘nthcdr’ and ‘car’, construct a series of expressions to
  ;; return the first, second, third, and fourth elements of a list.

  (setq my-list '("first" "second" "third" "fourth"))

  ;; first element
  (car (nthcdr 0 my-list))

  ;; second 
  (car (nthcdr 1 my-list))

  ;; third 
  (car (nthcdr 1 ( nthcdr 1 my-list)))

  ;; fourth
  (car (nthcdr 1 (nthcdr 1 (nthcdr 1 my-list))))
#+END_SRC

